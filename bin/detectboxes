#!/usr/bin/env python3
import argparse
import sys
import pathlib
import cv2 as cv2
import numpy as np
import os


# read the input image
def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('image', help='Image to analyze')
    ap.add_argument('output', help='Where to write the ouput files')
    args = ap.parse_args()
    print(f"File location using __file__ variable:{os.path.realpath(os.path.dirname(__file__))}")

    file_name = os.path.basename(args.image)
    file = os.path.splitext(file_name)
    filename = file[0]
   
    img = cv2.imread(args.image)

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    #cv2.imwrite("temp/index_gray.png", gray)

    blur = cv2.GaussianBlur(gray, (21,21), 0)
    #cv2.imwrite("temp/index_blur.png", blur)

    thresh = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU )[1]
    #cv2.imwrite("temp/index_thresh.png", thresh)

    kernal = cv2.getStructuringElement(cv2.MORPH_RECT, (3,13))
    #cv2.imwrite("temp/index_kernal.png", kernal)

    dilate = cv2.dilate(thresh, kernal, iterations=1)
    #cv2.imwrite("temp/index_dilate.png", dilate)

    cnts = cv2.findContours(dilate, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    cnts = cnts[0] if len(cnts) == 2 else cents[1]

    cnts = sorted(cnts, key=lambda x: cv2.boundingRect(x)[0])

    minx = 100000000
    miny = 100000000
    maxx = 0
    maxy = 0
    overallwidth = 0
    overallheight = 0
    boxx = boxy = 0
    for c in cnts:
        x, y, w, h = cv2.boundingRect(c)
        if x < minx : 
            minx = x
        if y < miny : 
            miny = y

        if x > maxx :
            maxx = x
            boxx=x+w
        
        if y > maxy :
            maxy = y
            boxy = h

        if w > overallwidth :
            overallwidth = w
        

    print(minx, miny, minx+overallwidth, maxy+boxy)   
    cv2.rectangle(gray, (minx,miny), (minx+overallwidth, maxy+boxy), (36,255,12), 2)       
    #cv2.imwrite("temp/index_bbox.png", gray)




    # Cropping an image
    print(img.shape) 
    cropped_image = img[miny:maxy+boxy, minx:minx+overallwidth]
    
    
    # Save the cropped image
    args.output= args.output.rstrip("/")
    save_space = args.output+"/"+file[0]+"_cropped"+file[1]
    print(save_space)
    cv2.imwrite(save_space, cropped_image)
    # output
    return 0



if __name__ == '__main__':
    sys.exit(main())